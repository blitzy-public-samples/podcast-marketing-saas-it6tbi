# Human Tasks:
# 1. Replace base64-encoded values with actual production secrets before deployment
# 2. Ensure proper RBAC permissions are configured for accessing secrets
# 3. Verify secret values match environment-specific configurations
# 4. Consider using external secret management solutions for production

# Requirement Addressed:
# - Sensitive Data Management (7.4 Cross-Cutting Concerns/7.4.2 Security Architecture)
#   Ensures sensitive data is securely stored using Kubernetes secrets with proper encryption
# - Environment-Specific Secrets (7.3 Technical Decisions/7.3.1 Architecture Patterns)
#   Provides environment-specific configuration for staging and production deployments

apiVersion: v1
kind: Secret
metadata:
  name: application-secrets
  namespace: default
  labels:
    app: secrets
  annotations:
    kubernetes.io/description: "Application secrets for backend services"
type: Opaque
data:
  # Base64 encoded values for sensitive data
  # Note: These are example values - replace with actual production secrets
  DATABASE_URL: cG9zdGdyZXM6Ly91c2VyOnBhc3N3b3JkQGRiLXNlcnZpY2U6NTQzMi9kYXRhYmFzZQ==  # postgres://user:password@db-service:5432/database
  SECRET_KEY: c3VwZXJzZWNyZXRrZXk=  # supersecretkey
  REDIS_PASSWORD: cmVkaXNwYXNzd29yZA==  # redispassword
  API_KEY: YXBpa2V5MTIzNDU=  # apikey12345

---
# Additional secret for Redis authentication
# Referenced by redis-deployment.yaml
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: default
  labels:
    app: redis
  annotations:
    kubernetes.io/description: "Redis authentication credentials"
type: Opaque
data:
  password: cmVkaXNwYXNzd29yZA==  # redispassword

---
# Additional secret for database credentials
# Referenced by backend-deployment.yaml
apiVersion: v1
kind: Secret
metadata:
  name: database-secrets
  namespace: default
  labels:
    app: database
  annotations:
    kubernetes.io/description: "Database connection credentials"
type: Opaque
data:
  DATABASE_URL: cG9zdGdyZXM6Ly91c2VyOnBhc3N3b3JkQGRiLXNlcnZpY2U6NTQzMi9kYXRhYmFzZQ==  # postgres://user:password@db-service:5432/database