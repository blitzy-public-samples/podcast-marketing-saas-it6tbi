# Requirement: Frontend CI/CD Pipeline (9.5 Development & Deployment/9.5.2 CI/CD Pipeline)
# Defines the continuous integration workflow for the React-based frontend application

name: Frontend CI

# Trigger workflow on push and pull request events
on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'src/web/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'src/web/**'
      - '.github/workflows/frontend-ci.yml'

# Environment variables used across jobs
env:
  NODE_VERSION: '18.x'
  WORKING_DIRECTORY: 'src/web'

jobs:
  # Requirement: Code Quality Assurance (8.3 API Design/8.3.4 API Security Controls)
  lint:
    name: Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Run Linting
        run: npm run lint

  # Requirement: Code Quality Assurance (8.3 API Design/8.3.4 API Security Controls)
  test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm run test
        env:
          CI: true

  # Requirement: Frontend Build Automation (7.5 Deployment Architecture/Production Environment)
  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build
        env:
          CI: true
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: ${{ env.WORKING_DIRECTORY }}/.next
          retention-days: 7

  # Add status check for required jobs
  status-check:
    name: Status Check
    needs: [lint, test, build]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check Status
        run: |
          if [ "${{ needs.lint.result }}" != "success" ] || \
             [ "${{ needs.test.result }}" != "success" ] || \
             [ "${{ needs.build.result }}" != "success" ]; then
            exit 1
          fi